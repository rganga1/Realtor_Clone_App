name: frontend-dev

on:
#   push:
#     branches: [ develop ]
#     paths: ["web-app/**","nginx_server/**"]
  # pull_request:
  #   branches: [ develop ]
  #   paths: ["web-app/**"]
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'debug'
        type: choice
        options:
        - info
        - warning
        - debug
  # schedule:
  #   - cron: '30 20 * * ?'
  #   # - cron: '0 2 * * ?'        

jobs:
  Building-and-deploying:
    runs-on: ubuntu-latest
    # if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    if: github.event_name == 'workflow_dispatch'
    steps:
      - name: npm-version
        run: node --version
      - name: checkout
        uses: actions/checkout@v2
      - name: env file generation
        run: |
          touch .env
          echo "REACT_APP_API_KEY=${{secrets.API_KEY}}" >${GITHUB_WORKSPACE}/.env
          echo "REACT_APP_AUTH_DOMAIN=${{secrets.AUTH_DOMAIN}}" >>${GITHUB_WORKSPACE}/.env
          echo "REACT_APP_PROJECT_ID=${{secrets.PROJECT_ID}}" >> ${GITHUB_WORKSPACE}/.env
          echo "REACT_APP_STORAGE_BUCKET=${{secrets.STORAGE_BUCKET}}" >> ${GITHUB_WORKSPACE}/.env
          echo "REACT_APP_MESSAGING_SENDER_ID=${{secrets.MESSAGING_SENDER_ID}}" >> ${GITHUB_WORKSPACE}/.env
          echo "REACT_APP_APP_ID=${{secrets.APP_ID}}" >> ${GITHUB_WORKSPACE}/.env

      - name: npm commands
        run: |
          pwd         
          npm install
          npm run build
      - name: Deploy to my EC2 instance
        uses: easingthemes/ssh-deploy@v4
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }} 
          SOURCE: "build/*"
          REMOTE_HOST: "ec2-3-110-194-130.ap-south-1.compute.amazonaws.com" 
          REMOTE_USER: "ubuntu"
          TARGET: "/var/www/realtor.com"